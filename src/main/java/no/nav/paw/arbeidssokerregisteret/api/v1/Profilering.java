/**
 * Autogenerated by Avro
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package no.nav.paw.arbeidssokerregisteret.api.v1;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

/**
 * Profilering av arbeidssøker
 * Inneholder informasjon som brukes til ruting av arbeidssøker til riktig veiledningstjeneste.
 * Profileringen er koblet til et bestemt sett opplysninger om arbeidssøker og en bestemt periode.
 * I tilfeller hvor 'opplysningerOmAbreidssøker' oppdateres til å gjelde periode vil det dukke opp en ny
 * profilering knyttet til den samme 'opplysningerOmArbeidssokerId' (periodeId vil være endret).
 */
@org.apache.avro.specific.AvroGenerated
public class Profilering extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    private static final long serialVersionUID = 772033707572999194L;


    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Profilering\",\"namespace\":\"no.nav.paw.arbeidssokerregisteret.api.v1\",\"doc\":\"Profilering av arbeidssøker\\nInneholder informasjon som brukes til ruting av arbeidssøker til riktig veiledningstjeneste.\\nProfileringen er koblet til et bestemt sett opplysninger om arbeidssøker og en bestemt periode.\\nI tilfeller hvor 'opplysningerOmAbreidssøker' oppdateres til å gjelde periode vil det dukke opp en ny\\nprofilering knyttet til den samme 'opplysningerOmArbeidssokerId' (periodeId vil være endret).\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"},\"doc\":\"Unik id for profileringen\"},{\"name\":\"periodeId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"},\"doc\":\"Unik id for perioden som profileringen tilhører\"},{\"name\":\"opplysningerOmArbeidssokerId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"},\"doc\":\"Unik id for OpplysningerOmArbeidssøker som profileringen tilhører\"},{\"name\":\"sendtInnAv\",\"type\":{\"type\":\"record\",\"name\":\"Metadata\",\"doc\":\"Inneholder metadata om en endring i arbeidssøkerregisteret.\",\"fields\":[{\"name\":\"tidspunkt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"doc\":\"Tidspunkt for endringen.\"},{\"name\":\"utfoertAv\",\"type\":{\"type\":\"record\",\"name\":\"Bruker\",\"doc\":\"En bruker er en person eller et system. Personer kan være sluttbrukere eller veiledere.\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"BrukerType\",\"symbols\":[\"UKJENT_VERDI\",\"UDEFINERT\",\"VEILEDER\",\"SYSTEM\",\"SLUTTBRUKER\"],\"default\":\"UKJENT_VERDI\"},\"doc\":\"Angir hvilken type bruker det er snakk om\"},{\"name\":\"id\",\"type\":\"string\",\"doc\":\"Brukerens identifikator.\\nFor sluttbruker er dette typisk fødselsnummer eller D-nummer.\\nFor system vil det rett og slett være navnet på et system, eventuelt med versjonsnummer i tillegg (APP_NAVN:VERSJON).\\nFor veileder vil det være NAV identen til veilederen.\"}]}},{\"name\":\"kilde\",\"type\":\"string\",\"doc\":\"Navn på systemet som utførte endringen eller ble benyttet til å utføre endringen.\"},{\"name\":\"aarsak\",\"type\":\"string\",\"doc\":\"Aarasek til endringen. Feks \\\"Flyttet ut av landet\\\" eller lignende.\"}]},\"doc\":\"Inneholder informasjon om når profileringen ble opprettet.\\nProfileringen er en automatisk prosess så 'sendtInnAv.utfoertAv' vil alltid peke på en\\n'SYSTEM' bruker med id på formen '[APP_NAVN]:[VERSJON]'\"},{\"name\":\"profilertTil\",\"type\":{\"type\":\"enum\",\"name\":\"ProfilertTil\",\"doc\":\"Resultatet av en profilering\\nUKJENT_VERDI\\t\\t\\t\\t\\t- \\tVerdien er satt, men den er ikke definert i versjonen av APIet som klienten bruker.\\nUDEFINERT\\t\\t\\t\\t\\t- \\tIngen verdi er satt.\\nANTATT_GODE_MULIGHETER\\t\\t- \\tAntatt gode muligheter for å komme i arbeid.\\nANTATT_BEHOV_FOR_VEILEDNING\\t- \\tAntatt behov for veiledning.\\nOPPGITT_HINDRINGER\\t\\t\\t- \\tPersonen har oppgitt at det finnes hindringer (helse eller annet) for å komme i arbeid.\",\"symbols\":[\"UKJENT_VERDI\",\"UDEFINERT\",\"ANTATT_GODE_MULIGHETER\",\"ANTATT_BEHOV_FOR_VEILEDNING\",\"OPPGITT_HINDRINGER\"],\"default\":\"UKJENT_VERDI\"},\"doc\":\"Selve profileringsresultatet\"},{\"name\":\"jobbetSammenhengendeSeksAvTolvSisteMnd\",\"type\":\"boolean\"},{\"name\":\"alder\",\"type\":[\"null\",\"int\"]}]}");

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    private static final SpecificData MODEL$ = new SpecificData();

    static {
        MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
        MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
    }

    private static final BinaryMessageEncoder<Profilering> ENCODER =
            new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

    private static final BinaryMessageDecoder<Profilering> DECODER =
            new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

    /**
     * Return the BinaryMessageEncoder instance used by this class.
     *
     * @return the message encoder used by this class
     */
    public static BinaryMessageEncoder<Profilering> getEncoder() {
        return ENCODER;
    }

    /**
     * Return the BinaryMessageDecoder instance used by this class.
     *
     * @return the message decoder used by this class
     */
    public static BinaryMessageDecoder<Profilering> getDecoder() {
        return DECODER;
    }

    /**
     * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
     *
     * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
     * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
     */
    public static BinaryMessageDecoder<Profilering> createDecoder(SchemaStore resolver) {
        return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
    }

    /**
     * Serializes this Profilering to a ByteBuffer.
     *
     * @return a buffer holding the serialized data for this instance
     * @throws java.io.IOException if this instance could not be serialized
     */
    public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
        return ENCODER.encode(this);
    }

    /**
     * Deserializes a Profilering from a ByteBuffer.
     *
     * @param b a byte buffer holding serialized data for an instance of this class
     * @return a Profilering instance decoded from the given buffer
     * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
     */
    public static Profilering fromByteBuffer(
            java.nio.ByteBuffer b) throws java.io.IOException {
        return DECODER.decode(b);
    }

    /**
     * Unik id for profileringen
     */
    private java.util.UUID id;
    /**
     * Unik id for perioden som profileringen tilhører
     */
    private java.util.UUID periodeId;
    /**
     * Unik id for OpplysningerOmArbeidssøker som profileringen tilhører
     */
    private java.util.UUID opplysningerOmArbeidssokerId;
    /**
     * Inneholder informasjon om når profileringen ble opprettet.
     * Profileringen er en automatisk prosess så 'sendtInnAv.utfoertAv' vil alltid peke på en
     * 'SYSTEM' bruker med id på formen '[APP_NAVN]:[VERSJON]'
     */
    private Metadata sendtInnAv;
    /**
     * Selve profileringsresultatet
     */
    private ProfilertTil profilertTil;
    private boolean jobbetSammenhengendeSeksAvTolvSisteMnd;
    private Integer alder;

    /**
     * Default constructor.  Note that this does not initialize fields
     * to their default values from the schema.  If that is desired then
     * one should use <code>newBuilder()</code>.
     */
    public Profilering() {
    }

    /**
     * All-args constructor.
     *
     * @param id                                     Unik id for profileringen
     * @param periodeId                              Unik id for perioden som profileringen tilhører
     * @param opplysningerOmArbeidssokerId           Unik id for OpplysningerOmArbeidssøker som profileringen tilhører
     * @param sendtInnAv                             Inneholder informasjon om når profileringen ble opprettet.
     *                                               Profileringen er en automatisk prosess så 'sendtInnAv.utfoertAv' vil alltid peke på en
     *                                               'SYSTEM' bruker med id på formen '[APP_NAVN]:[VERSJON]'
     * @param profilertTil                           Selve profileringsresultatet
     * @param jobbetSammenhengendeSeksAvTolvSisteMnd The new value for jobbetSammenhengendeSeksAvTolvSisteMnd
     * @param alder                                  The new value for alder
     */
    public Profilering(java.util.UUID id, java.util.UUID periodeId, java.util.UUID opplysningerOmArbeidssokerId, Metadata sendtInnAv, ProfilertTil profilertTil, Boolean jobbetSammenhengendeSeksAvTolvSisteMnd, Integer alder) {
        this.id = id;
        this.periodeId = periodeId;
        this.opplysningerOmArbeidssokerId = opplysningerOmArbeidssokerId;
        this.sendtInnAv = sendtInnAv;
        this.profilertTil = profilertTil;
        this.jobbetSammenhengendeSeksAvTolvSisteMnd = jobbetSammenhengendeSeksAvTolvSisteMnd;
        this.alder = alder;
    }

    @Override
    public SpecificData getSpecificData() {
        return MODEL$;
    }

    @Override
    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    @Override
    public Object get(int field$) {
        switch (field$) {
            case 0:
                return id;
            case 1:
                return periodeId;
            case 2:
                return opplysningerOmArbeidssokerId;
            case 3:
                return sendtInnAv;
            case 4:
                return profilertTil;
            case 5:
                return jobbetSammenhengendeSeksAvTolvSisteMnd;
            case 6:
                return alder;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    private static final org.apache.avro.Conversion<?>[] conversions =
            new org.apache.avro.Conversion<?>[]{
                    new org.apache.avro.Conversions.UUIDConversion(),
                    new org.apache.avro.Conversions.UUIDConversion(),
                    new org.apache.avro.Conversions.UUIDConversion(),
                    null,
                    null,
                    null,
                    null,
                    null
            };

    @Override
    public org.apache.avro.Conversion<?> getConversion(int field) {
        return conversions[field];
    }

    // Used by DatumReader.  Applications should not call.
    @Override
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, Object value$) {
        switch (field$) {
            case 0:
                id = (java.util.UUID) value$;
                break;
            case 1:
                periodeId = (java.util.UUID) value$;
                break;
            case 2:
                opplysningerOmArbeidssokerId = (java.util.UUID) value$;
                break;
            case 3:
                sendtInnAv = (Metadata) value$;
                break;
            case 4:
                profilertTil = (ProfilertTil) value$;
                break;
            case 5:
                jobbetSammenhengendeSeksAvTolvSisteMnd = (Boolean) value$;
                break;
            case 6:
                alder = (Integer) value$;
                break;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    /**
     * Gets the value of the 'id' field.
     *
     * @return Unik id for profileringen
     */
    public java.util.UUID getId() {
        return id;
    }


    /**
     * Sets the value of the 'id' field.
     * Unik id for profileringen
     *
     * @param value the value to set.
     */
    public void setId(java.util.UUID value) {
        this.id = value;
    }

    /**
     * Gets the value of the 'periodeId' field.
     *
     * @return Unik id for perioden som profileringen tilhører
     */
    public java.util.UUID getPeriodeId() {
        return periodeId;
    }


    /**
     * Sets the value of the 'periodeId' field.
     * Unik id for perioden som profileringen tilhører
     *
     * @param value the value to set.
     */
    public void setPeriodeId(java.util.UUID value) {
        this.periodeId = value;
    }

    /**
     * Gets the value of the 'opplysningerOmArbeidssokerId' field.
     *
     * @return Unik id for OpplysningerOmArbeidssøker som profileringen tilhører
     */
    public java.util.UUID getOpplysningerOmArbeidssokerId() {
        return opplysningerOmArbeidssokerId;
    }


    /**
     * Sets the value of the 'opplysningerOmArbeidssokerId' field.
     * Unik id for OpplysningerOmArbeidssøker som profileringen tilhører
     *
     * @param value the value to set.
     */
    public void setOpplysningerOmArbeidssokerId(java.util.UUID value) {
        this.opplysningerOmArbeidssokerId = value;
    }

    /**
     * Gets the value of the 'sendtInnAv' field.
     *
     * @return Inneholder informasjon om når profileringen ble opprettet.
     * Profileringen er en automatisk prosess så 'sendtInnAv.utfoertAv' vil alltid peke på en
     * 'SYSTEM' bruker med id på formen '[APP_NAVN]:[VERSJON]'
     */
    public Metadata getSendtInnAv() {
        return sendtInnAv;
    }


    /**
     * Sets the value of the 'sendtInnAv' field.
     * Inneholder informasjon om når profileringen ble opprettet.
     * Profileringen er en automatisk prosess så 'sendtInnAv.utfoertAv' vil alltid peke på en
     * 'SYSTEM' bruker med id på formen '[APP_NAVN]:[VERSJON]'
     *
     * @param value the value to set.
     */
    public void setSendtInnAv(Metadata value) {
        this.sendtInnAv = value;
    }

    /**
     * Gets the value of the 'profilertTil' field.
     *
     * @return Selve profileringsresultatet
     */
    public ProfilertTil getProfilertTil() {
        return profilertTil;
    }


    /**
     * Sets the value of the 'profilertTil' field.
     * Selve profileringsresultatet
     *
     * @param value the value to set.
     */
    public void setProfilertTil(ProfilertTil value) {
        this.profilertTil = value;
    }

    /**
     * Gets the value of the 'jobbetSammenhengendeSeksAvTolvSisteMnd' field.
     *
     * @return The value of the 'jobbetSammenhengendeSeksAvTolvSisteMnd' field.
     */
    public boolean getJobbetSammenhengendeSeksAvTolvSisteMnd() {
        return jobbetSammenhengendeSeksAvTolvSisteMnd;
    }


    /**
     * Sets the value of the 'jobbetSammenhengendeSeksAvTolvSisteMnd' field.
     *
     * @param value the value to set.
     */
    public void setJobbetSammenhengendeSeksAvTolvSisteMnd(boolean value) {
        this.jobbetSammenhengendeSeksAvTolvSisteMnd = value;
    }

    /**
     * Gets the value of the 'alder' field.
     *
     * @return The value of the 'alder' field.
     */
    public Integer getAlder() {
        return alder;
    }


    /**
     * Sets the value of the 'alder' field.
     *
     * @param value the value to set.
     */
    public void setAlder(Integer value) {
        this.alder = value;
    }

    /**
     * Creates a new Profilering RecordBuilder.
     *
     * @return A new Profilering RecordBuilder
     */
    public static Profilering.Builder newBuilder() {
        return new Profilering.Builder();
    }

    /**
     * Creates a new Profilering RecordBuilder by copying an existing Builder.
     *
     * @param other The existing builder to copy.
     * @return A new Profilering RecordBuilder
     */
    public static Profilering.Builder newBuilder(Profilering.Builder other) {
        if (other == null) {
            return new Profilering.Builder();
        } else {
            return new Profilering.Builder(other);
        }
    }

    /**
     * Creates a new Profilering RecordBuilder by copying an existing Profilering instance.
     *
     * @param other The existing instance to copy.
     * @return A new Profilering RecordBuilder
     */
    public static Profilering.Builder newBuilder(Profilering other) {
        if (other == null) {
            return new Profilering.Builder();
        } else {
            return new Profilering.Builder(other);
        }
    }

    /**
     * RecordBuilder for Profilering instances.
     */
    @org.apache.avro.specific.AvroGenerated
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Profilering>
            implements org.apache.avro.data.RecordBuilder<Profilering> {

        /**
         * Unik id for profileringen
         */
        private java.util.UUID id;
        /**
         * Unik id for perioden som profileringen tilhører
         */
        private java.util.UUID periodeId;
        /**
         * Unik id for OpplysningerOmArbeidssøker som profileringen tilhører
         */
        private java.util.UUID opplysningerOmArbeidssokerId;
        /**
         * Inneholder informasjon om når profileringen ble opprettet.
         * Profileringen er en automatisk prosess så 'sendtInnAv.utfoertAv' vil alltid peke på en
         * 'SYSTEM' bruker med id på formen '[APP_NAVN]:[VERSJON]'
         */
        private Metadata sendtInnAv;
        private Metadata.Builder sendtInnAvBuilder;
        /**
         * Selve profileringsresultatet
         */
        private ProfilertTil profilertTil;
        private boolean jobbetSammenhengendeSeksAvTolvSisteMnd;
        private Integer alder;

        /**
         * Creates a new Builder
         */
        private Builder() {
            super(SCHEMA$, MODEL$);
        }

        /**
         * Creates a Builder by copying an existing Builder.
         *
         * @param other The existing Builder to copy.
         */
        private Builder(Profilering.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.id)) {
                this.id = data().deepCopy(fields()[0].schema(), other.id);
                fieldSetFlags()[0] = other.fieldSetFlags()[0];
            }
            if (isValidValue(fields()[1], other.periodeId)) {
                this.periodeId = data().deepCopy(fields()[1].schema(), other.periodeId);
                fieldSetFlags()[1] = other.fieldSetFlags()[1];
            }
            if (isValidValue(fields()[2], other.opplysningerOmArbeidssokerId)) {
                this.opplysningerOmArbeidssokerId = data().deepCopy(fields()[2].schema(), other.opplysningerOmArbeidssokerId);
                fieldSetFlags()[2] = other.fieldSetFlags()[2];
            }
            if (isValidValue(fields()[3], other.sendtInnAv)) {
                this.sendtInnAv = data().deepCopy(fields()[3].schema(), other.sendtInnAv);
                fieldSetFlags()[3] = other.fieldSetFlags()[3];
            }
            if (other.hasSendtInnAvBuilder()) {
                this.sendtInnAvBuilder = Metadata.newBuilder(other.getSendtInnAvBuilder());
            }
            if (isValidValue(fields()[4], other.profilertTil)) {
                this.profilertTil = data().deepCopy(fields()[4].schema(), other.profilertTil);
                fieldSetFlags()[4] = other.fieldSetFlags()[4];
            }
            if (isValidValue(fields()[5], other.jobbetSammenhengendeSeksAvTolvSisteMnd)) {
                this.jobbetSammenhengendeSeksAvTolvSisteMnd = data().deepCopy(fields()[5].schema(), other.jobbetSammenhengendeSeksAvTolvSisteMnd);
                fieldSetFlags()[5] = other.fieldSetFlags()[5];
            }
            if (isValidValue(fields()[6], other.alder)) {
                this.alder = data().deepCopy(fields()[6].schema(), other.alder);
                fieldSetFlags()[6] = other.fieldSetFlags()[6];
            }
        }

        /**
         * Creates a Builder by copying an existing Profilering instance
         *
         * @param other The existing instance to copy.
         */
        private Builder(Profilering other) {
            super(SCHEMA$, MODEL$);
            if (isValidValue(fields()[0], other.id)) {
                this.id = data().deepCopy(fields()[0].schema(), other.id);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.periodeId)) {
                this.periodeId = data().deepCopy(fields()[1].schema(), other.periodeId);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.opplysningerOmArbeidssokerId)) {
                this.opplysningerOmArbeidssokerId = data().deepCopy(fields()[2].schema(), other.opplysningerOmArbeidssokerId);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.sendtInnAv)) {
                this.sendtInnAv = data().deepCopy(fields()[3].schema(), other.sendtInnAv);
                fieldSetFlags()[3] = true;
            }
            this.sendtInnAvBuilder = null;
            if (isValidValue(fields()[4], other.profilertTil)) {
                this.profilertTil = data().deepCopy(fields()[4].schema(), other.profilertTil);
                fieldSetFlags()[4] = true;
            }
            if (isValidValue(fields()[5], other.jobbetSammenhengendeSeksAvTolvSisteMnd)) {
                this.jobbetSammenhengendeSeksAvTolvSisteMnd = data().deepCopy(fields()[5].schema(), other.jobbetSammenhengendeSeksAvTolvSisteMnd);
                fieldSetFlags()[5] = true;
            }
            if (isValidValue(fields()[6], other.alder)) {
                this.alder = data().deepCopy(fields()[6].schema(), other.alder);
                fieldSetFlags()[6] = true;
            }
        }

        /**
         * Gets the value of the 'id' field.
         * Unik id for profileringen
         *
         * @return The value.
         */
        public java.util.UUID getId() {
            return id;
        }


        /**
         * Sets the value of the 'id' field.
         * Unik id for profileringen
         *
         * @param value The value of 'id'.
         * @return This builder.
         */
        public Profilering.Builder setId(java.util.UUID value) {
            validate(fields()[0], value);
            this.id = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'id' field has been set.
         * Unik id for profileringen
         *
         * @return True if the 'id' field has been set, false otherwise.
         */
        public boolean hasId() {
            return fieldSetFlags()[0];
        }


        /**
         * Clears the value of the 'id' field.
         * Unik id for profileringen
         *
         * @return This builder.
         */
        public Profilering.Builder clearId() {
            id = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /**
         * Gets the value of the 'periodeId' field.
         * Unik id for perioden som profileringen tilhører
         *
         * @return The value.
         */
        public java.util.UUID getPeriodeId() {
            return periodeId;
        }


        /**
         * Sets the value of the 'periodeId' field.
         * Unik id for perioden som profileringen tilhører
         *
         * @param value The value of 'periodeId'.
         * @return This builder.
         */
        public Profilering.Builder setPeriodeId(java.util.UUID value) {
            validate(fields()[1], value);
            this.periodeId = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /**
         * Checks whether the 'periodeId' field has been set.
         * Unik id for perioden som profileringen tilhører
         *
         * @return True if the 'periodeId' field has been set, false otherwise.
         */
        public boolean hasPeriodeId() {
            return fieldSetFlags()[1];
        }


        /**
         * Clears the value of the 'periodeId' field.
         * Unik id for perioden som profileringen tilhører
         *
         * @return This builder.
         */
        public Profilering.Builder clearPeriodeId() {
            periodeId = null;
            fieldSetFlags()[1] = false;
            return this;
        }

        /**
         * Gets the value of the 'opplysningerOmArbeidssokerId' field.
         * Unik id for OpplysningerOmArbeidssøker som profileringen tilhører
         *
         * @return The value.
         */
        public java.util.UUID getOpplysningerOmArbeidssokerId() {
            return opplysningerOmArbeidssokerId;
        }


        /**
         * Sets the value of the 'opplysningerOmArbeidssokerId' field.
         * Unik id for OpplysningerOmArbeidssøker som profileringen tilhører
         *
         * @param value The value of 'opplysningerOmArbeidssokerId'.
         * @return This builder.
         */
        public Profilering.Builder setOpplysningerOmArbeidssokerId(java.util.UUID value) {
            validate(fields()[2], value);
            this.opplysningerOmArbeidssokerId = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /**
         * Checks whether the 'opplysningerOmArbeidssokerId' field has been set.
         * Unik id for OpplysningerOmArbeidssøker som profileringen tilhører
         *
         * @return True if the 'opplysningerOmArbeidssokerId' field has been set, false otherwise.
         */
        public boolean hasOpplysningerOmArbeidssokerId() {
            return fieldSetFlags()[2];
        }


        /**
         * Clears the value of the 'opplysningerOmArbeidssokerId' field.
         * Unik id for OpplysningerOmArbeidssøker som profileringen tilhører
         *
         * @return This builder.
         */
        public Profilering.Builder clearOpplysningerOmArbeidssokerId() {
            opplysningerOmArbeidssokerId = null;
            fieldSetFlags()[2] = false;
            return this;
        }

        /**
         * Gets the value of the 'sendtInnAv' field.
         * Inneholder informasjon om når profileringen ble opprettet.
         * Profileringen er en automatisk prosess så 'sendtInnAv.utfoertAv' vil alltid peke på en
         * 'SYSTEM' bruker med id på formen '[APP_NAVN]:[VERSJON]'
         *
         * @return The value.
         */
        public Metadata getSendtInnAv() {
            return sendtInnAv;
        }


        /**
         * Sets the value of the 'sendtInnAv' field.
         * Inneholder informasjon om når profileringen ble opprettet.
         * Profileringen er en automatisk prosess så 'sendtInnAv.utfoertAv' vil alltid peke på en
         * 'SYSTEM' bruker med id på formen '[APP_NAVN]:[VERSJON]'
         *
         * @param value The value of 'sendtInnAv'.
         * @return This builder.
         */
        public Profilering.Builder setSendtInnAv(Metadata value) {
            validate(fields()[3], value);
            this.sendtInnAvBuilder = null;
            this.sendtInnAv = value;
            fieldSetFlags()[3] = true;
            return this;
        }

        /**
         * Checks whether the 'sendtInnAv' field has been set.
         * Inneholder informasjon om når profileringen ble opprettet.
         * Profileringen er en automatisk prosess så 'sendtInnAv.utfoertAv' vil alltid peke på en
         * 'SYSTEM' bruker med id på formen '[APP_NAVN]:[VERSJON]'
         *
         * @return True if the 'sendtInnAv' field has been set, false otherwise.
         */
        public boolean hasSendtInnAv() {
            return fieldSetFlags()[3];
        }

        /**
         * Gets the Builder instance for the 'sendtInnAv' field and creates one if it doesn't exist yet.
         * Inneholder informasjon om når profileringen ble opprettet.
         * Profileringen er en automatisk prosess så 'sendtInnAv.utfoertAv' vil alltid peke på en
         * 'SYSTEM' bruker med id på formen '[APP_NAVN]:[VERSJON]'
         *
         * @return This builder.
         */
        public Metadata.Builder getSendtInnAvBuilder() {
            if (sendtInnAvBuilder == null) {
                if (hasSendtInnAv()) {
                    setSendtInnAvBuilder(Metadata.newBuilder(sendtInnAv));
                } else {
                    setSendtInnAvBuilder(Metadata.newBuilder());
                }
            }
            return sendtInnAvBuilder;
        }

        /**
         * Sets the Builder instance for the 'sendtInnAv' field
         * Inneholder informasjon om når profileringen ble opprettet.
         * Profileringen er en automatisk prosess så 'sendtInnAv.utfoertAv' vil alltid peke på en
         * 'SYSTEM' bruker med id på formen '[APP_NAVN]:[VERSJON]'
         *
         * @param value The builder instance that must be set.
         * @return This builder.
         */

        public Profilering.Builder setSendtInnAvBuilder(Metadata.Builder value) {
            clearSendtInnAv();
            sendtInnAvBuilder = value;
            return this;
        }

        /**
         * Checks whether the 'sendtInnAv' field has an active Builder instance
         * Inneholder informasjon om når profileringen ble opprettet.
         * Profileringen er en automatisk prosess så 'sendtInnAv.utfoertAv' vil alltid peke på en
         * 'SYSTEM' bruker med id på formen '[APP_NAVN]:[VERSJON]'
         *
         * @return True if the 'sendtInnAv' field has an active Builder instance
         */
        public boolean hasSendtInnAvBuilder() {
            return sendtInnAvBuilder != null;
        }

        /**
         * Clears the value of the 'sendtInnAv' field.
         * Inneholder informasjon om når profileringen ble opprettet.
         * Profileringen er en automatisk prosess så 'sendtInnAv.utfoertAv' vil alltid peke på en
         * 'SYSTEM' bruker med id på formen '[APP_NAVN]:[VERSJON]'
         *
         * @return This builder.
         */
        public Profilering.Builder clearSendtInnAv() {
            sendtInnAv = null;
            sendtInnAvBuilder = null;
            fieldSetFlags()[3] = false;
            return this;
        }

        /**
         * Gets the value of the 'profilertTil' field.
         * Selve profileringsresultatet
         *
         * @return The value.
         */
        public ProfilertTil getProfilertTil() {
            return profilertTil;
        }


        /**
         * Sets the value of the 'profilertTil' field.
         * Selve profileringsresultatet
         *
         * @param value The value of 'profilertTil'.
         * @return This builder.
         */
        public Profilering.Builder setProfilertTil(ProfilertTil value) {
            validate(fields()[4], value);
            this.profilertTil = value;
            fieldSetFlags()[4] = true;
            return this;
        }

        /**
         * Checks whether the 'profilertTil' field has been set.
         * Selve profileringsresultatet
         *
         * @return True if the 'profilertTil' field has been set, false otherwise.
         */
        public boolean hasProfilertTil() {
            return fieldSetFlags()[4];
        }


        /**
         * Clears the value of the 'profilertTil' field.
         * Selve profileringsresultatet
         *
         * @return This builder.
         */
        public Profilering.Builder clearProfilertTil() {
            profilertTil = null;
            fieldSetFlags()[4] = false;
            return this;
        }

        /**
         * Gets the value of the 'jobbetSammenhengendeSeksAvTolvSisteMnd' field.
         *
         * @return The value.
         */
        public boolean getJobbetSammenhengendeSeksAvTolvSisteMnd() {
            return jobbetSammenhengendeSeksAvTolvSisteMnd;
        }


        /**
         * Sets the value of the 'jobbetSammenhengendeSeksAvTolvSisteMnd' field.
         *
         * @param value The value of 'jobbetSammenhengendeSeksAvTolvSisteMnd'.
         * @return This builder.
         */
        public Profilering.Builder setJobbetSammenhengendeSeksAvTolvSisteMnd(boolean value) {
            validate(fields()[5], value);
            this.jobbetSammenhengendeSeksAvTolvSisteMnd = value;
            fieldSetFlags()[5] = true;
            return this;
        }

        /**
         * Checks whether the 'jobbetSammenhengendeSeksAvTolvSisteMnd' field has been set.
         *
         * @return True if the 'jobbetSammenhengendeSeksAvTolvSisteMnd' field has been set, false otherwise.
         */
        public boolean hasJobbetSammenhengendeSeksAvTolvSisteMnd() {
            return fieldSetFlags()[5];
        }


        /**
         * Clears the value of the 'jobbetSammenhengendeSeksAvTolvSisteMnd' field.
         *
         * @return This builder.
         */
        public Profilering.Builder clearJobbetSammenhengendeSeksAvTolvSisteMnd() {
            fieldSetFlags()[5] = false;
            return this;
        }

        /**
         * Gets the value of the 'alder' field.
         *
         * @return The value.
         */
        public Integer getAlder() {
            return alder;
        }


        /**
         * Sets the value of the 'alder' field.
         *
         * @param value The value of 'alder'.
         * @return This builder.
         */
        public Profilering.Builder setAlder(Integer value) {
            validate(fields()[6], value);
            this.alder = value;
            fieldSetFlags()[6] = true;
            return this;
        }

        /**
         * Checks whether the 'alder' field has been set.
         *
         * @return True if the 'alder' field has been set, false otherwise.
         */
        public boolean hasAlder() {
            return fieldSetFlags()[6];
        }


        /**
         * Clears the value of the 'alder' field.
         *
         * @return This builder.
         */
        public Profilering.Builder clearAlder() {
            alder = null;
            fieldSetFlags()[6] = false;
            return this;
        }

        @Override
        @SuppressWarnings("unchecked")
        public Profilering build() {
            try {
                Profilering record = new Profilering();
                record.id = fieldSetFlags()[0] ? this.id : (java.util.UUID) defaultValue(fields()[0]);
                record.periodeId = fieldSetFlags()[1] ? this.periodeId : (java.util.UUID) defaultValue(fields()[1]);
                record.opplysningerOmArbeidssokerId = fieldSetFlags()[2] ? this.opplysningerOmArbeidssokerId : (java.util.UUID) defaultValue(fields()[2]);
                if (sendtInnAvBuilder != null) {
                    try {
                        record.sendtInnAv = this.sendtInnAvBuilder.build();
                    } catch (org.apache.avro.AvroMissingFieldException e) {
                        e.addParentField(record.getSchema().getField("sendtInnAv"));
                        throw e;
                    }
                } else {
                    record.sendtInnAv = fieldSetFlags()[3] ? this.sendtInnAv : (Metadata) defaultValue(fields()[3]);
                }
                record.profilertTil = fieldSetFlags()[4] ? this.profilertTil : (ProfilertTil) defaultValue(fields()[4]);
                record.jobbetSammenhengendeSeksAvTolvSisteMnd = fieldSetFlags()[5] ? this.jobbetSammenhengendeSeksAvTolvSisteMnd : (Boolean) defaultValue(fields()[5]);
                record.alder = fieldSetFlags()[6] ? this.alder : (Integer) defaultValue(fields()[6]);
                return record;
            } catch (org.apache.avro.AvroMissingFieldException e) {
                throw e;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumWriter<Profilering>
            WRITER$ = (org.apache.avro.io.DatumWriter<Profilering>) MODEL$.createDatumWriter(SCHEMA$);

    @Override
    public void writeExternal(java.io.ObjectOutput out)
            throws java.io.IOException {
        WRITER$.write(this, SpecificData.getEncoder(out));
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumReader<Profilering>
            READER$ = (org.apache.avro.io.DatumReader<Profilering>) MODEL$.createDatumReader(SCHEMA$);

    @Override
    public void readExternal(java.io.ObjectInput in)
            throws java.io.IOException {
        READER$.read(this, SpecificData.getDecoder(in));
    }

}










