/**
 * Autogenerated by Avro
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package no.nav.pto.veilarbportefolje.arbeidssoeker.dto.v1;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;

/**
 * Beskrivelse av et enkelt forhold som inngår i jobbsituasjonen, feks permitering eller oppsigelse
 */
@org.apache.avro.specific.AvroGenerated
public class BeskrivelseMedDetaljer extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    private static final long serialVersionUID = 1871163828431063212L;


    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BeskrivelseMedDetaljer\",\"namespace\":\"no.nav.paw.arbeidssokerregisteret.api.v1\",\"doc\":\"Beskrivelse av et enkelt forhold som inngår i jobbsituasjonen, feks permitering eller oppsigelse\",\"fields\":[{\"name\":\"beskrivelse\",\"type\":{\"type\":\"enum\",\"name\":\"Beskrivelse\",\"doc\":\"Beskrivelse av jobbsituasjonen. Følgende beskrivelser er definert:\\nUKJENT_VERDI\\t\\t\\t\\t\\t-\\t\\tVerdien er satt, men den er ikke definert i versjonen av APIet som klienten bruker.\\nUDEFINERT\\t\\t\\t\\t\\t\\t-\\t\\tVerdien er ikke satt.\\nHAR_SAGT_OPP\\t\\t\\t\\t\\t-\\t\\tPersonen har sagt opp sin stilling.\\nHAR_BLITT_SAGT_OPP\\t\\t\\t\\t-\\t\\tPersonen har blitt sagt opp fra sin stilling.\\nER_PERMITTERT\\t\\t\\t\\t\\t-\\t\\tPersonen er permittert.\\nALDRI_HATT_JOBB\\t\\t\\t\\t\\t-\\t\\tPersonen har aldri hatt en jobb.\\nIKKE_VAERT_I_JOBB_SISTE_2_AAR\\t-\\t\\tPersonen har ikke vært i jobb de siste 2 årene.\\nAKKURAT_FULLFORT_UTDANNING\\t\\t-\\t\\tPersonen har akkurat fullført sin utdanning.\\nUSIKKER_JOBBSITUASJON\\t\\t\\t-\\t\\tPersonen er usikker på sin jobbsituasjon.\\nMIDLERTIDIG_JOBB\\t\\t\\t\\t-\\t\\tPersonen har en midlertidig jobb.\\nDELTIDSJOBB_VIL_MER\\t\\t\\t\\t-\\t\\tPersonen har en/flere deltidsjobber, men ønsker å jobbe mer.\\nNY_JOBB\\t\\t\\t\\t\\t\\t\\t-\\t\\tPersonen har fått seg ny jobb.\\nKONKURS\\t\\t\\t\\t\\t\\t\\t-\\t\\tPersonen har mistet jobben på grunn av konkurs.\\nANNET\\t\\t\\t\\t\\t\\t\\t-\\t\\tPersonen har en annen jobbsituasjon.\",\"symbols\":[\"UKJENT_VERDI\",\"UDEFINERT\",\"HAR_SAGT_OPP\",\"HAR_BLITT_SAGT_OPP\",\"ER_PERMITTERT\",\"ALDRI_HATT_JOBB\",\"IKKE_VAERT_I_JOBB_SISTE_2_AAR\",\"AKKURAT_FULLFORT_UTDANNING\",\"VIL_BYTTE_JOBB\",\"USIKKER_JOBBSITUASJON\",\"MIDLERTIDIG_JOBB\",\"DELTIDSJOBB_VIL_MER\",\"NY_JOBB\",\"KONKURS\",\"ANNET\"],\"default\":\"UKJENT_VERDI\"}},{\"name\":\"detaljer\",\"type\":{\"type\":\"map\",\"values\":\"string\"},\"doc\":\"* Feltene taes bare med dersom de er er tilgjengelige, i praksis må klienter støtte å motta en tom map.\\n\\t  * Andre felter enn de som er definert her kan også forekomme.\\n\\t  * Detaljer om jobbsituasjonen. Følgende nøkler er definert:\\n\\t  *          Nøkkel\\t\\t\\t\\t\\t\\t-\\t\\t\\tVerdi\\n\\t  * gjelder_fra_dato_iso8601\\t-\\t\\tdatoen jobbsituasjonen gjelder fra (eksempel 2019-01-27)\\n\\t  * gjelder_til_dato_iso8601\\t-\\t\\tdatoen jobbsituasjonen gjelder til (eksempel 2019-01-27)\\n  \\t  * stilling \\t\\t\\t\\t\\t-\\t    tekstlig beskrivelse av stillingen jobbsituasjonen gjelder (eksempel \\\"Lærer\\\")\\n  \\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\tForventet for:\\n  \\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- HAR_SAGT_OPP\\n  \\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- HAR_BLITT_SAGT_OPP\\n  \\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- PERMITTERT\\n  \\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- KONKURS\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tKan også brukes for andre beskriverlser som er knyttet til en stilling, feks \\\"DELTIDSJOBB_VIL_MER\\\"\\n  \\t  * stilling_styrk08 \\t\\t\\t- \\t\\tstillingens kode i STYRK08 (eksempel \\\"2359\\\"), se SSB for mer informasjon om STYRK08.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tForventet for:\\n  \\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- HAR_SAGT_OPP\\n  \\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- HAR_BLITT_SAGT_OPP\\n  \\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- PERMITTERT\\n  \\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t- KONKURS\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tKan også brukes for andre beskriverlser som er knyttet til en stilling, feks \\\"DELTIDSJOBB_VIL_MER\\\"\\n  \\t  * prosent \\t\\t\\t\\t\\t- \\t\\tprosentandel jobbstituasjonen gjelder for (feks kombinert med 'ER_PERMITERT' eller 'DELTIDSJOBB_VIL_MER'), eksempel \\\"50\\\".\\n  \\t  * siste_dag_med_loenn_iso8601  - \\t\\tSiste dag det betales lønn for (feks ved oppsigelse)(eksempel 2019-01-27).\\n  \\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\tEnkelte kilder, inkludert migrering har brukt 'siste_dag_med_loen_iso8601' (en 'n'), enbefaler\\n  \\t  \\t\\t\\t\\t\\t\\t\\t\\t\\t\\tderfor å normalisere til 'siste_dag_med_loenn_iso8601' (to 'n') ved lesing for å fange begge verianter.\\n  \\t  * siste_arbeidsdag_iso8601\\t-\\t\\tSiste arbeidssdag. Ikke nødvendigvis siste dag det betales lønn for, feks ved konkurs(eksempel 2019-01-27).\\n  \\t  *\"}]}");

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    private static final SpecificData MODEL$ = new SpecificData();

    private static final BinaryMessageEncoder<BeskrivelseMedDetaljer> ENCODER =
            new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

    private static final BinaryMessageDecoder<BeskrivelseMedDetaljer> DECODER =
            new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

    /**
     * Return the BinaryMessageEncoder instance used by this class.
     *
     * @return the message encoder used by this class
     */
    public static BinaryMessageEncoder<BeskrivelseMedDetaljer> getEncoder() {
        return ENCODER;
    }

    /**
     * Return the BinaryMessageDecoder instance used by this class.
     *
     * @return the message decoder used by this class
     */
    public static BinaryMessageDecoder<BeskrivelseMedDetaljer> getDecoder() {
        return DECODER;
    }

    /**
     * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
     *
     * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
     * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
     */
    public static BinaryMessageDecoder<BeskrivelseMedDetaljer> createDecoder(SchemaStore resolver) {
        return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
    }

    /**
     * Serializes this BeskrivelseMedDetaljer to a ByteBuffer.
     *
     * @return a buffer holding the serialized data for this instance
     * @throws java.io.IOException if this instance could not be serialized
     */
    public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
        return ENCODER.encode(this);
    }

    /**
     * Deserializes a BeskrivelseMedDetaljer from a ByteBuffer.
     *
     * @param b a byte buffer holding serialized data for an instance of this class
     * @return a BeskrivelseMedDetaljer instance decoded from the given buffer
     * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
     */
    public static BeskrivelseMedDetaljer fromByteBuffer(
            java.nio.ByteBuffer b) throws java.io.IOException {
        return DECODER.decode(b);
    }

    private Beskrivelse beskrivelse;
    /**
     * Feltene taes bare med dersom de er er tilgjengelige, i praksis må klienter støtte å motta en tom map.
     * Andre felter enn de som er definert her kan også forekomme.
     * Detaljer om jobbsituasjonen. Følgende nøkler er definert:
     * Nøkkel						-			Verdi
     * gjelder_fra_dato_iso8601	-		datoen jobbsituasjonen gjelder fra (eksempel 2019-01-27)
     * gjelder_til_dato_iso8601	-		datoen jobbsituasjonen gjelder til (eksempel 2019-01-27)
     * stilling 					-	    tekstlig beskrivelse av stillingen jobbsituasjonen gjelder (eksempel "Lærer")
     * Forventet for:
     * - HAR_SAGT_OPP
     * - HAR_BLITT_SAGT_OPP
     * - PERMITTERT
     * - KONKURS
     * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
     * stilling_styrk08 			- 		stillingens kode i STYRK08 (eksempel "2359"), se SSB for mer informasjon om STYRK08.
     * Forventet for:
     * - HAR_SAGT_OPP
     * - HAR_BLITT_SAGT_OPP
     * - PERMITTERT
     * - KONKURS
     * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
     * prosent 					- 		prosentandel jobbstituasjonen gjelder for (feks kombinert med 'ER_PERMITERT' eller 'DELTIDSJOBB_VIL_MER'), eksempel "50".
     * siste_dag_med_loenn_iso8601  - 		Siste dag det betales lønn for (feks ved oppsigelse)(eksempel 2019-01-27).
     * Enkelte kilder, inkludert migrering har brukt 'siste_dag_med_loen_iso8601' (en 'n'), enbefaler
     * derfor å normalisere til 'siste_dag_med_loenn_iso8601' (to 'n') ved lesing for å fange begge verianter.
     * siste_arbeidsdag_iso8601	-		Siste arbeidssdag. Ikke nødvendigvis siste dag det betales lønn for, feks ved konkurs(eksempel 2019-01-27).
     */
    private java.util.Map<CharSequence, CharSequence> detaljer;

    /**
     * Default constructor.  Note that this does not initialize fields
     * to their default values from the schema.  If that is desired then
     * one should use <code>newBuilder()</code>.
     */
    public BeskrivelseMedDetaljer() {
    }

    /**
     * All-args constructor.
     *
     * @param beskrivelse The new value for beskrivelse
     * @param detaljer    * Feltene taes bare med dersom de er er tilgjengelige, i praksis må klienter støtte å motta en tom map.
     *                    Andre felter enn de som er definert her kan også forekomme.
     *                    Detaljer om jobbsituasjonen. Følgende nøkler er definert:
     *                    Nøkkel						-			Verdi
     *                    gjelder_fra_dato_iso8601	-		datoen jobbsituasjonen gjelder fra (eksempel 2019-01-27)
     *                    gjelder_til_dato_iso8601	-		datoen jobbsituasjonen gjelder til (eksempel 2019-01-27)
     *                    stilling 					-	    tekstlig beskrivelse av stillingen jobbsituasjonen gjelder (eksempel "Lærer")
     *                    Forventet for:
     *                    - HAR_SAGT_OPP
     *                    - HAR_BLITT_SAGT_OPP
     *                    - PERMITTERT
     *                    - KONKURS
     *                    Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
     *                    stilling_styrk08 			- 		stillingens kode i STYRK08 (eksempel "2359"), se SSB for mer informasjon om STYRK08.
     *                    Forventet for:
     *                    - HAR_SAGT_OPP
     *                    - HAR_BLITT_SAGT_OPP
     *                    - PERMITTERT
     *                    - KONKURS
     *                    Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
     *                    prosent 					- 		prosentandel jobbstituasjonen gjelder for (feks kombinert med 'ER_PERMITERT' eller 'DELTIDSJOBB_VIL_MER'), eksempel "50".
     *                    siste_dag_med_loenn_iso8601  - 		Siste dag det betales lønn for (feks ved oppsigelse)(eksempel 2019-01-27).
     *                    Enkelte kilder, inkludert migrering har brukt 'siste_dag_med_loen_iso8601' (en 'n'), enbefaler
     *                    derfor å normalisere til 'siste_dag_med_loenn_iso8601' (to 'n') ved lesing for å fange begge verianter.
     *                    siste_arbeidsdag_iso8601	-		Siste arbeidssdag. Ikke nødvendigvis siste dag det betales lønn for, feks ved konkurs(eksempel 2019-01-27).
     */
    public BeskrivelseMedDetaljer(Beskrivelse beskrivelse, java.util.Map<CharSequence, CharSequence> detaljer) {
        this.beskrivelse = beskrivelse;
        this.detaljer = detaljer;
    }

    @Override
    public SpecificData getSpecificData() {
        return MODEL$;
    }

    @Override
    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    @Override
    public Object get(int field$) {
        switch (field$) {
            case 0:
                return beskrivelse;
            case 1:
                return detaljer;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    // Used by DatumReader.  Applications should not call.
    @Override
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, Object value$) {
        switch (field$) {
            case 0:
                beskrivelse = (Beskrivelse) value$;
                break;
            case 1:
                detaljer = (java.util.Map<CharSequence, CharSequence>) value$;
                break;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    /**
     * Gets the value of the 'beskrivelse' field.
     *
     * @return The value of the 'beskrivelse' field.
     */
    public Beskrivelse getBeskrivelse() {
        return beskrivelse;
    }


    /**
     * Sets the value of the 'beskrivelse' field.
     *
     * @param value the value to set.
     */
    public void setBeskrivelse(Beskrivelse value) {
        this.beskrivelse = value;
    }

    /**
     * Gets the value of the 'detaljer' field.
     *
     * @return * Feltene taes bare med dersom de er er tilgjengelige, i praksis må klienter støtte å motta en tom map.
     * Andre felter enn de som er definert her kan også forekomme.
     * Detaljer om jobbsituasjonen. Følgende nøkler er definert:
     * Nøkkel						-			Verdi
     * gjelder_fra_dato_iso8601	-		datoen jobbsituasjonen gjelder fra (eksempel 2019-01-27)
     * gjelder_til_dato_iso8601	-		datoen jobbsituasjonen gjelder til (eksempel 2019-01-27)
     * stilling 					-	    tekstlig beskrivelse av stillingen jobbsituasjonen gjelder (eksempel "Lærer")
     * Forventet for:
     * - HAR_SAGT_OPP
     * - HAR_BLITT_SAGT_OPP
     * - PERMITTERT
     * - KONKURS
     * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
     * stilling_styrk08 			- 		stillingens kode i STYRK08 (eksempel "2359"), se SSB for mer informasjon om STYRK08.
     * Forventet for:
     * - HAR_SAGT_OPP
     * - HAR_BLITT_SAGT_OPP
     * - PERMITTERT
     * - KONKURS
     * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
     * prosent 					- 		prosentandel jobbstituasjonen gjelder for (feks kombinert med 'ER_PERMITERT' eller 'DELTIDSJOBB_VIL_MER'), eksempel "50".
     * siste_dag_med_loenn_iso8601  - 		Siste dag det betales lønn for (feks ved oppsigelse)(eksempel 2019-01-27).
     * Enkelte kilder, inkludert migrering har brukt 'siste_dag_med_loen_iso8601' (en 'n'), enbefaler
     * derfor å normalisere til 'siste_dag_med_loenn_iso8601' (to 'n') ved lesing for å fange begge verianter.
     * siste_arbeidsdag_iso8601	-		Siste arbeidssdag. Ikke nødvendigvis siste dag det betales lønn for, feks ved konkurs(eksempel 2019-01-27).
     */
    public java.util.Map<CharSequence, CharSequence> getDetaljer() {
        return detaljer;
    }


    /**
     * Sets the value of the 'detaljer' field.
     * * Feltene taes bare med dersom de er er tilgjengelige, i praksis må klienter støtte å motta en tom map.
     * Andre felter enn de som er definert her kan også forekomme.
     * Detaljer om jobbsituasjonen. Følgende nøkler er definert:
     * Nøkkel						-			Verdi
     * gjelder_fra_dato_iso8601	-		datoen jobbsituasjonen gjelder fra (eksempel 2019-01-27)
     * gjelder_til_dato_iso8601	-		datoen jobbsituasjonen gjelder til (eksempel 2019-01-27)
     * stilling 					-	    tekstlig beskrivelse av stillingen jobbsituasjonen gjelder (eksempel "Lærer")
     * Forventet for:
     * - HAR_SAGT_OPP
     * - HAR_BLITT_SAGT_OPP
     * - PERMITTERT
     * - KONKURS
     * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
     * stilling_styrk08 			- 		stillingens kode i STYRK08 (eksempel "2359"), se SSB for mer informasjon om STYRK08.
     * Forventet for:
     * - HAR_SAGT_OPP
     * - HAR_BLITT_SAGT_OPP
     * - PERMITTERT
     * - KONKURS
     * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
     * prosent 					- 		prosentandel jobbstituasjonen gjelder for (feks kombinert med 'ER_PERMITERT' eller 'DELTIDSJOBB_VIL_MER'), eksempel "50".
     * siste_dag_med_loenn_iso8601  - 		Siste dag det betales lønn for (feks ved oppsigelse)(eksempel 2019-01-27).
     * Enkelte kilder, inkludert migrering har brukt 'siste_dag_med_loen_iso8601' (en 'n'), enbefaler
     * derfor å normalisere til 'siste_dag_med_loenn_iso8601' (to 'n') ved lesing for å fange begge verianter.
     * siste_arbeidsdag_iso8601	-		Siste arbeidssdag. Ikke nødvendigvis siste dag det betales lønn for, feks ved konkurs(eksempel 2019-01-27).
     *
     * @param value the value to set.
     */
    public void setDetaljer(java.util.Map<CharSequence, CharSequence> value) {
        this.detaljer = value;
    }

    /**
     * Creates a new BeskrivelseMedDetaljer RecordBuilder.
     *
     * @return A new BeskrivelseMedDetaljer RecordBuilder
     */
    public static BeskrivelseMedDetaljer.Builder newBuilder() {
        return new BeskrivelseMedDetaljer.Builder();
    }

    /**
     * Creates a new BeskrivelseMedDetaljer RecordBuilder by copying an existing Builder.
     *
     * @param other The existing builder to copy.
     * @return A new BeskrivelseMedDetaljer RecordBuilder
     */
    public static BeskrivelseMedDetaljer.Builder newBuilder(BeskrivelseMedDetaljer.Builder other) {
        if (other == null) {
            return new BeskrivelseMedDetaljer.Builder();
        } else {
            return new BeskrivelseMedDetaljer.Builder(other);
        }
    }

    /**
     * Creates a new BeskrivelseMedDetaljer RecordBuilder by copying an existing BeskrivelseMedDetaljer instance.
     *
     * @param other The existing instance to copy.
     * @return A new BeskrivelseMedDetaljer RecordBuilder
     */
    public static BeskrivelseMedDetaljer.Builder newBuilder(BeskrivelseMedDetaljer other) {
        if (other == null) {
            return new BeskrivelseMedDetaljer.Builder();
        } else {
            return new BeskrivelseMedDetaljer.Builder(other);
        }
    }

    /**
     * RecordBuilder for BeskrivelseMedDetaljer instances.
     */
    @org.apache.avro.specific.AvroGenerated
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BeskrivelseMedDetaljer>
            implements org.apache.avro.data.RecordBuilder<BeskrivelseMedDetaljer> {

        private Beskrivelse beskrivelse;
        /**
         * Feltene taes bare med dersom de er er tilgjengelige, i praksis må klienter støtte å motta en tom map.
         * Andre felter enn de som er definert her kan også forekomme.
         * Detaljer om jobbsituasjonen. Følgende nøkler er definert:
         * Nøkkel						-			Verdi
         * gjelder_fra_dato_iso8601	-		datoen jobbsituasjonen gjelder fra (eksempel 2019-01-27)
         * gjelder_til_dato_iso8601	-		datoen jobbsituasjonen gjelder til (eksempel 2019-01-27)
         * stilling 					-	    tekstlig beskrivelse av stillingen jobbsituasjonen gjelder (eksempel "Lærer")
         * Forventet for:
         * - HAR_SAGT_OPP
         * - HAR_BLITT_SAGT_OPP
         * - PERMITTERT
         * - KONKURS
         * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
         * stilling_styrk08 			- 		stillingens kode i STYRK08 (eksempel "2359"), se SSB for mer informasjon om STYRK08.
         * Forventet for:
         * - HAR_SAGT_OPP
         * - HAR_BLITT_SAGT_OPP
         * - PERMITTERT
         * - KONKURS
         * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
         * prosent 					- 		prosentandel jobbstituasjonen gjelder for (feks kombinert med 'ER_PERMITERT' eller 'DELTIDSJOBB_VIL_MER'), eksempel "50".
         * siste_dag_med_loenn_iso8601  - 		Siste dag det betales lønn for (feks ved oppsigelse)(eksempel 2019-01-27).
         * Enkelte kilder, inkludert migrering har brukt 'siste_dag_med_loen_iso8601' (en 'n'), enbefaler
         * derfor å normalisere til 'siste_dag_med_loenn_iso8601' (to 'n') ved lesing for å fange begge verianter.
         * siste_arbeidsdag_iso8601	-		Siste arbeidssdag. Ikke nødvendigvis siste dag det betales lønn for, feks ved konkurs(eksempel 2019-01-27).
         */
        private java.util.Map<CharSequence, CharSequence> detaljer;

        /**
         * Creates a new Builder
         */
        private Builder() {
            super(SCHEMA$, MODEL$);
        }

        /**
         * Creates a Builder by copying an existing Builder.
         *
         * @param other The existing Builder to copy.
         */
        private Builder(BeskrivelseMedDetaljer.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.beskrivelse)) {
                this.beskrivelse = data().deepCopy(fields()[0].schema(), other.beskrivelse);
                fieldSetFlags()[0] = other.fieldSetFlags()[0];
            }
            if (isValidValue(fields()[1], other.detaljer)) {
                this.detaljer = data().deepCopy(fields()[1].schema(), other.detaljer);
                fieldSetFlags()[1] = other.fieldSetFlags()[1];
            }
        }

        /**
         * Creates a Builder by copying an existing BeskrivelseMedDetaljer instance
         *
         * @param other The existing instance to copy.
         */
        private Builder(BeskrivelseMedDetaljer other) {
            super(SCHEMA$, MODEL$);
            if (isValidValue(fields()[0], other.beskrivelse)) {
                this.beskrivelse = data().deepCopy(fields()[0].schema(), other.beskrivelse);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.detaljer)) {
                this.detaljer = data().deepCopy(fields()[1].schema(), other.detaljer);
                fieldSetFlags()[1] = true;
            }
        }

        /**
         * Gets the value of the 'beskrivelse' field.
         *
         * @return The value.
         */
        public Beskrivelse getBeskrivelse() {
            return beskrivelse;
        }


        /**
         * Sets the value of the 'beskrivelse' field.
         *
         * @param value The value of 'beskrivelse'.
         * @return This builder.
         */
        public BeskrivelseMedDetaljer.Builder setBeskrivelse(Beskrivelse value) {
            validate(fields()[0], value);
            this.beskrivelse = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'beskrivelse' field has been set.
         *
         * @return True if the 'beskrivelse' field has been set, false otherwise.
         */
        public boolean hasBeskrivelse() {
            return fieldSetFlags()[0];
        }


        /**
         * Clears the value of the 'beskrivelse' field.
         *
         * @return This builder.
         */
        public BeskrivelseMedDetaljer.Builder clearBeskrivelse() {
            beskrivelse = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /**
         * Gets the value of the 'detaljer' field.
         * * Feltene taes bare med dersom de er er tilgjengelige, i praksis må klienter støtte å motta en tom map.
         * Andre felter enn de som er definert her kan også forekomme.
         * Detaljer om jobbsituasjonen. Følgende nøkler er definert:
         * Nøkkel						-			Verdi
         * gjelder_fra_dato_iso8601	-		datoen jobbsituasjonen gjelder fra (eksempel 2019-01-27)
         * gjelder_til_dato_iso8601	-		datoen jobbsituasjonen gjelder til (eksempel 2019-01-27)
         * stilling 					-	    tekstlig beskrivelse av stillingen jobbsituasjonen gjelder (eksempel "Lærer")
         * Forventet for:
         * - HAR_SAGT_OPP
         * - HAR_BLITT_SAGT_OPP
         * - PERMITTERT
         * - KONKURS
         * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
         * stilling_styrk08 			- 		stillingens kode i STYRK08 (eksempel "2359"), se SSB for mer informasjon om STYRK08.
         * Forventet for:
         * - HAR_SAGT_OPP
         * - HAR_BLITT_SAGT_OPP
         * - PERMITTERT
         * - KONKURS
         * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
         * prosent 					- 		prosentandel jobbstituasjonen gjelder for (feks kombinert med 'ER_PERMITERT' eller 'DELTIDSJOBB_VIL_MER'), eksempel "50".
         * siste_dag_med_loenn_iso8601  - 		Siste dag det betales lønn for (feks ved oppsigelse)(eksempel 2019-01-27).
         * Enkelte kilder, inkludert migrering har brukt 'siste_dag_med_loen_iso8601' (en 'n'), enbefaler
         * derfor å normalisere til 'siste_dag_med_loenn_iso8601' (to 'n') ved lesing for å fange begge verianter.
         * siste_arbeidsdag_iso8601	-		Siste arbeidssdag. Ikke nødvendigvis siste dag det betales lønn for, feks ved konkurs(eksempel 2019-01-27).
         *
         * @return The value.
         */
        public java.util.Map<CharSequence, CharSequence> getDetaljer() {
            return detaljer;
        }


        /**
         * Sets the value of the 'detaljer' field.
         * * Feltene taes bare med dersom de er er tilgjengelige, i praksis må klienter støtte å motta en tom map.
         * Andre felter enn de som er definert her kan også forekomme.
         * Detaljer om jobbsituasjonen. Følgende nøkler er definert:
         * Nøkkel						-			Verdi
         * gjelder_fra_dato_iso8601	-		datoen jobbsituasjonen gjelder fra (eksempel 2019-01-27)
         * gjelder_til_dato_iso8601	-		datoen jobbsituasjonen gjelder til (eksempel 2019-01-27)
         * stilling 					-	    tekstlig beskrivelse av stillingen jobbsituasjonen gjelder (eksempel "Lærer")
         * Forventet for:
         * - HAR_SAGT_OPP
         * - HAR_BLITT_SAGT_OPP
         * - PERMITTERT
         * - KONKURS
         * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
         * stilling_styrk08 			- 		stillingens kode i STYRK08 (eksempel "2359"), se SSB for mer informasjon om STYRK08.
         * Forventet for:
         * - HAR_SAGT_OPP
         * - HAR_BLITT_SAGT_OPP
         * - PERMITTERT
         * - KONKURS
         * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
         * prosent 					- 		prosentandel jobbstituasjonen gjelder for (feks kombinert med 'ER_PERMITERT' eller 'DELTIDSJOBB_VIL_MER'), eksempel "50".
         * siste_dag_med_loenn_iso8601  - 		Siste dag det betales lønn for (feks ved oppsigelse)(eksempel 2019-01-27).
         * Enkelte kilder, inkludert migrering har brukt 'siste_dag_med_loen_iso8601' (en 'n'), enbefaler
         * derfor å normalisere til 'siste_dag_med_loenn_iso8601' (to 'n') ved lesing for å fange begge verianter.
         * siste_arbeidsdag_iso8601	-		Siste arbeidssdag. Ikke nødvendigvis siste dag det betales lønn for, feks ved konkurs(eksempel 2019-01-27).
         *
         * @param value The value of 'detaljer'.
         * @return This builder.
         */
        public BeskrivelseMedDetaljer.Builder setDetaljer(java.util.Map<CharSequence, CharSequence> value) {
            validate(fields()[1], value);
            this.detaljer = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /**
         * Checks whether the 'detaljer' field has been set.
         * * Feltene taes bare med dersom de er er tilgjengelige, i praksis må klienter støtte å motta en tom map.
         * Andre felter enn de som er definert her kan også forekomme.
         * Detaljer om jobbsituasjonen. Følgende nøkler er definert:
         * Nøkkel						-			Verdi
         * gjelder_fra_dato_iso8601	-		datoen jobbsituasjonen gjelder fra (eksempel 2019-01-27)
         * gjelder_til_dato_iso8601	-		datoen jobbsituasjonen gjelder til (eksempel 2019-01-27)
         * stilling 					-	    tekstlig beskrivelse av stillingen jobbsituasjonen gjelder (eksempel "Lærer")
         * Forventet for:
         * - HAR_SAGT_OPP
         * - HAR_BLITT_SAGT_OPP
         * - PERMITTERT
         * - KONKURS
         * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
         * stilling_styrk08 			- 		stillingens kode i STYRK08 (eksempel "2359"), se SSB for mer informasjon om STYRK08.
         * Forventet for:
         * - HAR_SAGT_OPP
         * - HAR_BLITT_SAGT_OPP
         * - PERMITTERT
         * - KONKURS
         * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
         * prosent 					- 		prosentandel jobbstituasjonen gjelder for (feks kombinert med 'ER_PERMITERT' eller 'DELTIDSJOBB_VIL_MER'), eksempel "50".
         * siste_dag_med_loenn_iso8601  - 		Siste dag det betales lønn for (feks ved oppsigelse)(eksempel 2019-01-27).
         * Enkelte kilder, inkludert migrering har brukt 'siste_dag_med_loen_iso8601' (en 'n'), enbefaler
         * derfor å normalisere til 'siste_dag_med_loenn_iso8601' (to 'n') ved lesing for å fange begge verianter.
         * siste_arbeidsdag_iso8601	-		Siste arbeidssdag. Ikke nødvendigvis siste dag det betales lønn for, feks ved konkurs(eksempel 2019-01-27).
         *
         * @return True if the 'detaljer' field has been set, false otherwise.
         */
        public boolean hasDetaljer() {
            return fieldSetFlags()[1];
        }


        /**
         * Clears the value of the 'detaljer' field.
         * * Feltene taes bare med dersom de er er tilgjengelige, i praksis må klienter støtte å motta en tom map.
         * Andre felter enn de som er definert her kan også forekomme.
         * Detaljer om jobbsituasjonen. Følgende nøkler er definert:
         * Nøkkel						-			Verdi
         * gjelder_fra_dato_iso8601	-		datoen jobbsituasjonen gjelder fra (eksempel 2019-01-27)
         * gjelder_til_dato_iso8601	-		datoen jobbsituasjonen gjelder til (eksempel 2019-01-27)
         * stilling 					-	    tekstlig beskrivelse av stillingen jobbsituasjonen gjelder (eksempel "Lærer")
         * Forventet for:
         * - HAR_SAGT_OPP
         * - HAR_BLITT_SAGT_OPP
         * - PERMITTERT
         * - KONKURS
         * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
         * stilling_styrk08 			- 		stillingens kode i STYRK08 (eksempel "2359"), se SSB for mer informasjon om STYRK08.
         * Forventet for:
         * - HAR_SAGT_OPP
         * - HAR_BLITT_SAGT_OPP
         * - PERMITTERT
         * - KONKURS
         * Kan også brukes for andre beskriverlser som er knyttet til en stilling, feks "DELTIDSJOBB_VIL_MER"
         * prosent 					- 		prosentandel jobbstituasjonen gjelder for (feks kombinert med 'ER_PERMITERT' eller 'DELTIDSJOBB_VIL_MER'), eksempel "50".
         * siste_dag_med_loenn_iso8601  - 		Siste dag det betales lønn for (feks ved oppsigelse)(eksempel 2019-01-27).
         * Enkelte kilder, inkludert migrering har brukt 'siste_dag_med_loen_iso8601' (en 'n'), enbefaler
         * derfor å normalisere til 'siste_dag_med_loenn_iso8601' (to 'n') ved lesing for å fange begge verianter.
         * siste_arbeidsdag_iso8601	-		Siste arbeidssdag. Ikke nødvendigvis siste dag det betales lønn for, feks ved konkurs(eksempel 2019-01-27).
         *
         * @return This builder.
         */
        public BeskrivelseMedDetaljer.Builder clearDetaljer() {
            detaljer = null;
            fieldSetFlags()[1] = false;
            return this;
        }

        @Override
        @SuppressWarnings("unchecked")
        public BeskrivelseMedDetaljer build() {
            try {
                BeskrivelseMedDetaljer record = new BeskrivelseMedDetaljer();
                record.beskrivelse = fieldSetFlags()[0] ? this.beskrivelse : (Beskrivelse) defaultValue(fields()[0]);
                record.detaljer = fieldSetFlags()[1] ? this.detaljer : (java.util.Map<CharSequence, CharSequence>) defaultValue(fields()[1]);
                return record;
            } catch (org.apache.avro.AvroMissingFieldException e) {
                throw e;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumWriter<BeskrivelseMedDetaljer>
            WRITER$ = (org.apache.avro.io.DatumWriter<BeskrivelseMedDetaljer>) MODEL$.createDatumWriter(SCHEMA$);

    @Override
    public void writeExternal(java.io.ObjectOutput out)
            throws java.io.IOException {
        WRITER$.write(this, SpecificData.getEncoder(out));
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumReader<BeskrivelseMedDetaljer>
            READER$ = (org.apache.avro.io.DatumReader<BeskrivelseMedDetaljer>) MODEL$.createDatumReader(SCHEMA$);

    @Override
    public void readExternal(java.io.ObjectInput in)
            throws java.io.IOException {
        READER$.read(this, SpecificData.getDecoder(in));
    }

    @Override
    protected boolean hasCustomCoders() {
        return true;
    }

    @Override
    public void customEncode(org.apache.avro.io.Encoder out)
            throws java.io.IOException {
        out.writeEnum(this.beskrivelse.ordinal());

        long size0 = this.detaljer.size();
        out.writeMapStart();
        out.setItemCount(size0);
        long actualSize0 = 0;
        for (java.util.Map.Entry<CharSequence, CharSequence> e0 : this.detaljer.entrySet()) {
            actualSize0++;
            out.startItem();
            out.writeString(e0.getKey());
            CharSequence v0 = e0.getValue();
            out.writeString(v0);
        }
        out.writeMapEnd();
        if (actualSize0 != size0)
            throw new java.util.ConcurrentModificationException("Map-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    }

    @Override
    public void customDecode(org.apache.avro.io.ResolvingDecoder in)
            throws java.io.IOException {
        org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
        if (fieldOrder == null) {
            this.beskrivelse = Beskrivelse.values()[in.readEnum()];

            long size0 = in.readMapStart();
            java.util.Map<CharSequence, CharSequence> m0 = this.detaljer; // Need fresh name due to limitation of macro system
            if (m0 == null) {
                m0 = new java.util.HashMap<CharSequence, CharSequence>((int) size0);
                this.detaljer = m0;
            } else m0.clear();
            for (; 0 < size0; size0 = in.mapNext()) {
                for (; size0 != 0; size0--) {
                    CharSequence k0 = null;
                    k0 = in.readString(k0 instanceof Utf8 ? (Utf8) k0 : null);
                    CharSequence v0 = null;
                    v0 = in.readString(v0 instanceof Utf8 ? (Utf8) v0 : null);
                    m0.put(k0, v0);
                }
            }

        } else {
            for (int i = 0; i < 2; i++) {
                switch (fieldOrder[i].pos()) {
                    case 0:
                        this.beskrivelse = Beskrivelse.values()[in.readEnum()];
                        break;

                    case 1:
                        long size0 = in.readMapStart();
                        java.util.Map<CharSequence, CharSequence> m0 = this.detaljer; // Need fresh name due to limitation of macro system
                        if (m0 == null) {
                            m0 = new java.util.HashMap<CharSequence, CharSequence>((int) size0);
                            this.detaljer = m0;
                        } else m0.clear();
                        for (; 0 < size0; size0 = in.mapNext()) {
                            for (; size0 != 0; size0--) {
                                CharSequence k0 = null;
                                k0 = in.readString(k0 instanceof Utf8 ? (Utf8) k0 : null);
                                CharSequence v0 = null;
                                v0 = in.readString(v0 instanceof Utf8 ? (Utf8) v0 : null);
                                m0.put(k0, v0);
                            }
                        }
                        break;

                    default:
                        throw new java.io.IOException("Corrupt ResolvingDecoder.");
                }
            }
        }
    }
}










